package sunb.education.habbit.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Example;import org.springframework.data.domain.ExampleMatcher;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import sunb.education.habbit.components.Rule;import sunb.education.habbit.components.RuleResult;import sunb.education.habbit.repository.RuleRepository;import sunb.education.habbit.repository.RuleResultRepository;import java.util.List;import java.util.stream.Collectors;/** * Created with IntelliJ IDEA. * Description: * Project Name:    habbit * User:            sunb * Date:            2017-11-29 * Time:            18:39 */@RestControllerpublic class RuleResultController {    @Autowired    RuleResultRepository resultRepository;    @Autowired    RuleRepository ruleRepository;    @PostMapping("results")    @Transactional    public List<RuleResult> results(@RequestBody List<RuleResult> results) {        List<Rule> collect = results.stream().map(result -> {            Rule rule = result.getRule();            if (result.getId() == null) {                int newScore = result.getDidIt() ? Math.max(0, rule.getScore() - 10) : rule.getScore() + 10;                rule.setScore(newScore);            }            return rule;        }).collect(Collectors.toList());        ruleRepository.save(collect);        List<RuleResult> saved = resultRepository.save(results);        return saved;    }    @GetMapping("hints")    public List<RuleResult> hints(@RequestParam String date) {        //String date = todayMap.get("date");        RuleResult rr = new RuleResult();        rr.setCheckDate(date);        //创建匹配器，即如何使用查询条件        ExampleMatcher matcher = ExampleMatcher.matching() //构建对象                .withMatcher("checkDate", ExampleMatcher.GenericPropertyMatchers.exact());        //创建实例        Example<RuleResult> of = Example.of(rr, matcher);        List<RuleResult> all = resultRepository.findAll(of);        return all;    }}